@model PostSnap.Dtos.EditPostDto

@{
    ViewData["Title"] = "Edit";
}

<div >
    <div class="d-flex justify-content-between">
        @if (PostPermissions.CanHardDelete(User))
        {
            <!-- Hard Delete Icon Button (Admin only) -->
            <div class="dropdown d-inline ms-2 float-end">
                <button class="btn btn-sm btn-outline-secondary dropdown-toggle  mt-1"
                        type="button"
                        id="adminDropdown-@Model.Id"
                        data-bs-toggle="dropdown"
                        aria-expanded="false">
                    <i class="bi bi-shield-lock-fill"></i> Admin
                </button>
                <ul class="dropdown-menu" aria-labelledby="adminDropdown-@Model.Id">
                    <li>
                        <button class="dropdown-item text-danger"
                                onclick="submitHardDelete(@Model.Id)">
                            🗑️ Hard Delete
                        </button>
                    </li>
                    <!-- Add more admin options here -->
                </ul>
            </div>


            <form id="hard-delete-form-@Model.Id"
                  method="post"
                  asp-controller="Posts"
                  asp-action="HardDelete"
                  asp-route-id="@Model.Id"
                  style="display:none;">
                @Html.AntiForgeryToken()
            </form>
        }

        <h1>Edit Post</h1>
        <!--Delete Form-->
        <form asp-action="Delete" asp-route-id="@Model.Id" method="post" onsubmit="return confirm ('This Post will be deleted!')">
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-outline-danger ms-auto">Delete Post</button>
        </form>
    </div>
</div>

<form asp-action="Edit" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()

    <input type="hidden" asp-for="Id" />
    <!-- Title Field -->
    <div class="form-group">
        <label asp-for="Title"></label>
        <input asp-for="Title" class="form-control" data-original-title="@Model.Title"/>
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>

    <!-- Body Field -->
    <div class="form-group">
        <label asp-for="Body"></label>
        <textarea asp-for="Body" class="form-control" rows="5" data-original-body="@Model.Body" ></textarea>
        <span asp-validation-for="Body" class="text-danger"></span>
    </div>
    <hr />

    <!-- Current Image-->
    @if (!string.IsNullOrEmpty(@Model.ImageFileName))
    {

        <div class="form-group" id="currentImage">
            <label asp-for="ImageUpload" class="control-label font-weight-bold">Current Image</label>

            <div class="image-container">
                <a href="/uploads/@Model.ImageFileName" target="_self" data-lightbox="post-gallery" data-title="@Model.Title">

                    <img src="/uploads/@Model.ImageFileName" class="card-img-custom mb-3" alt="Current Post Image" id="currentImage" />
                </a>
            </div>
        
    </div>
    }

        <br />
    <!-- Image Upload Field -->
    <div class="form-group">
        <label asp-for="ImageUpload" class="control-label font-weight-bold">Upload Image</label>
        <input asp-for="ImageUpload" type="file" class="form-control-file" id="imageUploadInput" accept="image/*" onchange="previewImage(event)" />
        <!-- Preview Image -->
        <div class="form-group text-center mt-3">
            <span id="imageError" class="text-danger d-block mt-2"></span>

            <img id="imagePreview" src="#" alt="Image Preview" class="img-fluid rounded d-none" style="max-height: 300px;" />
        </div>

        <span asp-validation-for="ImageUpload" class="text-danger"></span>
    </div>
    <br />
    
    <div class="m-1">
        <button type="submit" class="btn btn-primary" id="saveChangesBtn" disabled>Save Changes</button>
        <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-secondary">Cancel</a>

    </div>
</form>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Call the function from site.js to initialize the edit form logic
        initEditPostForm();
    </script>

}