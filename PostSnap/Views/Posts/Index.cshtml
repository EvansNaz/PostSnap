@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<PostSnap.Models.Post>


@{
    ViewData["Title"] = "PostSnap";
}

<h1 class="text-center my-4">PostSnap</h1>



<!-- Search Bar -->
<nav class="navbar navbar-light justify-content-center mb-3">
    <form asp-action="Index" method="get" class="form-inline d-flex">
        <input type="hidden" name="sortOrder" value="@ViewData["CurrentSort"]"/>
        <input type="search" name="searchTerm" value="@ViewData["CurrentFilter"]" class="form-control mr-2" placeholder="Search posts" />
        <button type="submit" class="btn btn-outline-success">
            🔍
        </button>
    </form>
</nav>

<!-- Sort Dropdown -->
<div class="d-flex justify-content-center mb-3">
    <form asp-action="Index" method="get" class="form-inline">
        <input type="hidden" name="searchTerm" value="@ViewData["CurrentFilter"]" />
        <select name="sortOrder" class="form-select mr-2" onchange="this.form.submit()">
            @{
                var currentSort = ViewData["CurrentSort"]?.ToString() ?? "";//if [Currentsort] is null Tostring() is not called and becomes ""

                //if the user selects an option then it stays selected even if additional requests are happening
                <option value="" selected="@(currentSort == "" ? "selected" : null)">Newest</option>
                <option value="oldest" selected="@(currentSort == "oldest" ? "selected" : null)">Oldest</option>
                <option value="title_asc" selected="@(currentSort == "title_asc" ? "selected" : null)">Title A-Z</option>
            }
        </select>
    </form>
</div>



<p class="text-center mt-4">
    <a asp-action="Create" class="btn btn-success">Create New Post</a>
</p>
<div class="container text-center ">
    <div class="row justify-content-center">
        @foreach (var post in Model)
        {
            <div class="col-md-8 mb-4">
                <div class="card shadow-lg rounded">
                    <div class="card-body">
                        <h3 class="card-title text-center">@post.Title</h3>
                        <p class="text-muted ">By <strong>@(post.User?.UserName ?? "Unknown")</strong> on @post.CreatedAt.ToString("MMMM dd, yyyy")</p>

                        <!-- Image  shows  if the image exists -->
                        @if (!string.IsNullOrEmpty(@post.ImageFileName) && System.IO.File.Exists($"wwwroot\\uploads\\{post.ImageFileName}"))
                        {
                            <div class="image-container">
                                <a href="/uploads/@post.ImageFileName" target="_self" data-lightbox="post-gallery" data-title="@post.Title">

                                    <img src="/uploads/@post.ImageFileName" class="card-img-custom" alt="Post image" />
                                </a>
                            </div>
                            <hr />
                        }


                        <p class="card-text">
                            @if (post.Body.Length > 200)
                            {
                                @post.Body.Substring(0, 200)<text>...</text> 
                                @* .. <!--Show only first 200 chars-- > *@
                            }
                            else
                            {
                                @post.Body
                            }
                        </p>
                        <a asp-action="Details" asp-route-id="@post.Id" class="btn btn-primary">Read More</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<!-- Pagination Controls -->
@await Html.PartialAsync("_Pagination", Model)









