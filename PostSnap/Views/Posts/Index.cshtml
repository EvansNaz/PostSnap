@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<PostSnap.Models.Post>


@{
    ViewData["Title"] = "Latest Posts";
}
<head>
    <style>
        .pagination .page-link {
            color: #007bff;
            margin: 0 3px;
            border-radius: 10px;
        }

        .pagination .active .page-link {
            background-color: #007bff;
            color: white;
            border-color: #007bff;

        }

        svg {
            stroke: currentColor;
            min-width: 20px;
            height: 25px;
            stroke-width: 1.5px;
        }

    </style>
</head>
<h1 class="text-center my-4">Latest Posts</h1>

<!--Search Bar-->
<nav class="navbar navbar-light  justify-content-center">

<form asp-action="Index" method="get" class="form-inline">
    <div class="input-group">
        <input type="text" name="searchTerm" value="@ViewData["CurrentFilter"]" class="form-control mr-sm-2" placeholder="Search posts" />
            <button type="submit" class="btn btn-outline-success " >
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="-1 -1 18 18">
                    <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
                </svg>
            </button>
            
        </div>
</form>
</nav>

<p class="text-center mt-4">
    <a asp-action="Create" class="btn btn-success">Create New Post</a>
</p>
<div class="container">
    <div class="row justify-content-center">
        @foreach (var post in Model)
        {
            <div class="col-md-8 mb-4">
                <div class="card shadow-lg rounded">
                    <div class="card-body">
                        <h3 class="card-title">@post.Title</h3>
                        <p class="text-muted">By <strong>@(post.User?.UserName ?? "Unknown")</strong> on @post.CreatedAt.ToString("MMMM dd, yyyy")</p>
                        <p class="card-text">
                            @if (post.Body.Length > 200)
                            {
                                @post.Body.Substring(0, 200)
                                @* .. <!--Show only first 200 chars-- > *@
                            }
                            else
                            {
                                @post.Body
                            }
                        </p>
                        <a asp-action="Details" asp-route-id="@post.Id" class="btn btn-primary">Read More</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<!-- Pagination Controls -->

<div class="d-flex justify-content-center mt-4">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
            new PagedListRenderOptions
    {
        UlElementClasses = new[] { "pagination" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },

        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
        DisplayLinkToLastPage = PagedListDisplayMode.Always,
        DisplayLinkToPreviousPage = PagedListDisplayMode.Never,
        DisplayLinkToNextPage = PagedListDisplayMode.Never,

        DisplayLinkToIndividualPages = true,
        MaximumPageNumbersToDisplay = 5, // show 5 pages at once

                // Enable ellipses for skipped pages
        EllipsesFormat = "...", // after or before + or - 5 items
        LinkToFirstPageFormat = "« First",
        LinkToLastPageFormat = "Last »",
    })
</div>








