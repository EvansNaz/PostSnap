@model PostSnap.Models.ViewModels.PostDetailsViewModel
@using System.Security.Claims
@using System.Text.Json

@{
    ViewData["Title"] = Model.Post.Title;
    var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
}
<style>
    .image-container {
        overflow: hidden;
        border-radius: 10px;
    }

        .image-container img {
            transition: transform 0.4s ease;
        }

        .image-container:hover img {
            transform: scale(1.05);
        }

    .card-body {
        padding-top: 2.5rem;
    }
</style>

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card shadow-sm rounded-4 p-4 mb-4">
                <div class="card-body text-center">
                    <h1 class="h2 mb-3">@Model.Post.Title</h1>
                    <hr class="my-3">

                    <p class="text-muted small">
                        By <strong>@(Model.Post.User?.UserName ?? "Unknown")</strong> |
                        @Model.Post.CreatedAt.ToString("MMMM dd, yyyy, h:mm tt")
                        @if (Model.Post.LastModifiedAt.HasValue)
                        {
                            <span class="ms-1 fst-italic text-danger" title="Edited at @Model.Post.LastModifiedAt.Value.ToString("MMM dd yyyy, h:mm tt")">
                                (edited)
                            </span>
                        }
                    </p>

                    @if (!string.IsNullOrEmpty(Model.Post.ImageFileName))
                    {
                        <div class="image-container mb-3">
                            <a href="/uploads/@Model.Post.ImageFileName" data-lightbox="post-gallery" data-title="@Model.Post.Title">
                                <img src="/uploads/@Model.Post.ImageFileName" class="img-fluid rounded" alt="Post image" />
                            </a>
                        </div>
                    }

                    <hr />

                    <p class="fs-5">@Model.Post.Body</p>
                </div>
            </div>

            <!-- Back and Edit Buttons -->
            <div class="d-flex justify-content-between mb-4">
                <a asp-action="Index" class="btn btn-outline-secondary">← Back to Posts</a>

                @if (PostPermissions.CanEdit(Model.Post, User))
                {
                    <a asp-action="Edit" asp-route-id="@Model.Post.Id" class="btn btn-warning">✏️ Edit</a>
                }
            </div>

            <h4 id="comments" class="mb-3">💬 Comments</h4>

            <div class="comments-container">
                @if (Model.Comments != null && Model.Comments.Any())
                {
                    <p class="text-muted small">Total Comments: @Model.Comments.TotalItemCount</p>

                    @foreach (var comment in Model.Comments)
                    {
                        var canEdit = CommentPermissions.CanEdit(comment, User);
                        var canSoftDelete = CommentPermissions.CanSoftDelete(comment, User);
                        var canHardDelete = CommentPermissions.CanHardDelete(comment, User);
                        var editFormId = $"edit-form-{comment.Id}";
                        var contentDisplayId = $"comment-content-{comment.Id}";
                        var editBtnId = $"edit-btn-{comment.Id}";

                        <div class="card mb-3 shadow-sm">
                            <div class="card-body position-relative">
                                <!-- Buttons (Edit / Admin) -->
                                <div class="position-absolute top-0 end-0 m-2 d-flex gap-1">
                                    @if (canEdit)
                                    {
                                        <button id="edit-btn-@comment.Id" class="btn btn-sm btn-outline-primary" onclick="toggleEditForm('@comment.Id')">✏️</button>
                                    }

                                    @if (canHardDelete)
                                    {
                                        <div class="dropdown" id="admin-container-@comment.Id">
                                            <button class="btn btn-sm btn-outline-secondary dropdown-toggle"
                                                    type="button"
                                                    id="adminDropdown-@comment.Id"
                                                    data-bs-toggle="dropdown"
                                                    aria-expanded="false">
                                                <i class="bi bi-shield-lock-fill"></i>
                                            </button>
                                            <ul class="dropdown-menu" aria-labelledby="adminDropdown-@comment.Id">
                                                <li>
                                                    <button class="dropdown-item text-danger"
                                                            onclick="submitHardDelete(@comment.Id)">
                                                        🗑️ Hard Delete
                                                    </button>
                                                </li>
                                            </ul>
                                        </div>
                                        @*Hard-delete form*@
                                        <form id="hard-delete-form-@comment.Id"
                                              method="post"
                                              asp-controller="Comments"
                                              asp-action="HardDelete"
                                              asp-route-id="@comment.Id"
                                              style="display:none;">
                                            @Html.AntiForgeryToken()
                                        </form>
                                    }
                                </div>
                                <!-- Comment Text -->
                                <div id="@contentDisplayId">
                                    <p class="mb-2 comment-text">@comment.Content?.Trim()</p>
                                    <small class="text-muted">
                                        By <strong>@(comment.User?.UserName ?? "Unknown")</strong>
                                        on @comment.CreatedAt.ToString("MMM dd yyyy, h:mm tt")
                                        @if (comment.LastModifiedAt.HasValue)
                                        {
                                            <span class="text-danger ms-1" title="Edited at @comment.LastModifiedAt.Value.ToString("MMM dd yyyy, h:mm tt")">
                                                (edited)
                                            </span>
                                        }
                                    </small>
                                </div>


                                <!-- Edit Form (Hidden initially) -->
                                @if (canEdit)
                                {
                                    <form id="@editFormId" class="mt-2 d-none" method="post" asp-controller="Comments" asp-action="Edit">
                                        <input type="hidden" name="PostId" value="@Model.Post.Id" />
                                        <input type="hidden" name="CommentId" value="@comment.Id" />

                                        <textarea id="edit-textarea-@comment.Id"
                                                  name="Content"
                                                  class="form-control mb-2"
                                                  required
                                                  data-original-content="@comment.Content?.Trim()"
                                                  oninput="checkIfChanged('@comment.Id')">@comment.Content</textarea>
                                        <div class="d-flex gap-2">
                                            <button type="submit" class="btn btn-sm btn-success" disabled>Save</button>
                                            <button type="button" class="btn btn-sm btn-secondary" onclick="toggleEditForm('@comment.Id')">Cancel</button>
                                            <button type="button" class="btn btn-sm btn-danger" onclick="submitDelete('@comment.Id')">Delete</button>
                                        </div>
                                    </form>

                                    <form id="delete-form-@comment.Id"
                                          method="post"
                                          asp-controller="Comments"
                                          asp-action="Delete"
                                          asp-route-id="@comment.Id"
                                          style="display: none;">
                                        @Html.AntiForgeryToken()
                                    </form>
                                }

                                

                            </div>
                        </div>
                    }


                    @await Html.PartialAsync("_Pagination", Model.Comments)
                }
                else
                {
                    <p class="text-muted">No comments yet. Be the first!</p>
                }
            </div>

            @* Comment Form *@
            @if (CommentPermissions.IsAuthenticated(User))
            {
                <form asp-controller="Comments" asp-action="Create" method="post" class="mt-4">
                    <div class="mb-3">
                        <textarea name="Content" class="form-control" rows="3" required maxlength="500" placeholder="Write your comment here..."></textarea>
                        <input type="hidden" name="PostId" value="@Model.Post.Id" />
                    </div>
                    <button type="submit" class="btn btn-primary">➕ Add Comment</button>
                </form>
            }
            else
            {
                <p class="mt-3"><a asp-controller="Account" asp-action="Login">Log in</a> to add a comment.</p>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // =========================
        // === Comment Edit Script ===
        // =========================
        // This script manages:
        // - Toggling edit forms for comments (show/hide)
        // - Enabling Save button only if actual content changed
        // - Confirming before deleting (soft or hard delete)
        // - Works with jQuery to manipulate DOM elements easily

        /**
         * Toggle the visibility of the Edit Form for a specific comment.
         * - If form is hidden, show it and hide the original comment text.
         * - If form is shown, hide it and reset textarea to original content.
         * - Also toggles the "Edit" button visibility.
         */
        function toggleEditForm(commentId) {
            const form = $(`#edit-form-${commentId}`);        // The hidden edit <form> element
            const content = $(`#comment-content-${commentId}`); // The paragraph showing comment content
            const editBtn = $(`#edit-btn-${commentId}`);      // The small "Edit" button
            const textarea = $(`#edit-textarea-${commentId}`); // The <textarea> where user edits content
            const admin =                 $(`#admin-container-${commentId}`).hide();

            const originalContent = textarea.data("original-content").trim(); // Saved original content

            if (form.hasClass("d-none")) {
                // Show the edit form and hide the content + edit button
                form.removeClass("d-none");
                content.hide();
                editBtn.hide();
                admin.hide();
                textarea.focus(); // Focus on textarea for user convenience
            } else {
                // Hide the edit form, show back the content and edit button
                form.addClass("d-none");
                content.show();
                editBtn.show();
                                admin.show();
                textarea.val(originalContent); // Reset textarea if cancelled
                checkIfChanged(commentId); // Re-check if Save button should be enabled/disabled
            }
        }

        /**
         * Check if the user has modified the comment content.
         * - If content is different (after trimming spaces), enable Save button.
         * - If not changed, keep Save button disabled to avoid unnecessary submits.
         */
        function checkIfChanged(commentId) {
            const textarea = $(`#edit-textarea-${commentId}`);
            const originalContent = textarea.data("original-content").trim();
            const currentContent = textarea.val().trim();
            const saveBtn = textarea.closest("form").find("button[type='submit']");

            // Enable Save button only if content changed
            saveBtn.prop("disabled", currentContent === originalContent);
        }

        /**
         * Submit the Soft Delete Form for a comment.
         * - Shows a confirmation dialog.
         * - If confirmed, submits the hidden <form> for soft deletion (mark as deleted).
         */
        function submitDelete(commentId) {
            if (confirm('Are you sure you want to delete this comment?')) {
                $(`#delete-form-${commentId}`).submit();
            }
        }

        /**
         * Submit the Hard Delete Form for a comment (Admin Only).
         * - Shows a confirmation dialog.
         * - If confirmed, submits the hidden <form> for hard deletion (completely remove from database).
         */
        function submitHardDelete(commentId) {
            if (confirm('Are you sure you want to permanently delete this comment?')) {
                $(`#hard-delete-form-${commentId}`).submit();
            }
        }

        // === AJAX Comments Pagination + Scroll to Comments Title ===
        $(document).on('click', '.pagination a', function (e) {
            e.preventDefault();
            var url = $(this).attr('href');

            $.get(url, function (data) {
                $('.comments-container').html($(data).find('.comments-container').html());
                $('html, body').animate({
                    scrollTop: $("#comments").offset().top - 20
                }, 500);
            });
        });
    </script>
}
